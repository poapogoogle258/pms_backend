accessible: true
author: Olivier Martin
context: '*Estimated time: 25 minutes*


  Given a binary file containing some (possibly none) positive integers (``int``)
  that were stored in the file by successive calls of ``write(fd,&num,sizeof(int))``
  write code that computes the sum of all integers that were stored in the file.
  The function returns the sum when there are no errors. In case of errors, it returns.


  - If ``open()`` fails, return ``-1``.

  - If ``read()`` fails, return ``-2``.

  - If ``close()`` fails, return ``-3``.


  You can only use ``open(2)``, ``read(2)``, ``write(2)`` and ``close(2)``.'
environment: cpp
evaluate: best
groups: false
limits: {memory: '100', output: '2', time: '30'}
name: '[S5] Reading integers in a binary file'
network_grading: false
order: 53
problems:
  q1: {header: ".. code-block:: c\n\n    /*\n     * @pre filename != NULL, name of\
      \ the file\n     * @post returns the sum of all integers stored in the binary\
      \ file.\n     *       return -1 if the file can not be open.\n     *       return\
      \ -2 if an error occurs during reading\n     *       return -3 if close() fails.\n\
      \     */\n    int sum_file(char *filename) {", language: c, name: Write your
      code here, type: code}
stored_submissions: 0
submission_limit: {amount: -1, period: -1}
tags:
  '0': {description: This tag validate that your close are correctly performed., id: close,
    name: Close, type: 0, visible: true}
  '1': {description: This tag validate you are able to open a file and handle errors
      with open()., id: open, name: Open, type: 0, visible: true}
  '10': {description: '', id: memory, name: Memory Exceeded, type: 1, visible: true}
  '11': {description: '', id: '', name: S5, type: 2, visible: true}
  '12': {description: '', id: '', name: File, type: 2, visible: true}
  '13': {description: Your code does not compile with cppcheck, id: cppcheck, name: Cppcheck
      fails, type: 1, visible: true}
  '2': {description: The student has correctly computed and returned the sum., id: sum,
    name: Sum, type: 0, visible: false}
  '3': {description: You code does not compile., id: not_compile, name: Not compile,
    type: 1, visible: true}
  '4': {description: '', id: sigsegv, name: Segmentation Fault, type: 1, visible: true}
  '5': {description: Your code exceeds the maximum allowed time., id: timeout, name: Timeout,
    type: 1, visible: true}
  '6': {description: You do not manage failures properly during read operations.,
    id: failure_handling, name: Failure handling, type: 1, visible: true}
  '7': {description: You use some banned functions., id: banned_funcs, name: Banned
      functions, type: 1, visible: true}
  '8': {description: Your code produced a double free., id: double_free, name: Double
      free, type: 1, visible: true}
  '9': {description: '', id: sigfpe, name: Floating Point Exception, type: 1, visible: true}
weight: 1.0
