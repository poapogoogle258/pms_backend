_id: 5aaecedbaff4146437ca4743
archive: 5aaf9ab3aff4146437ca83a0
courseid: LSINF1252
custom: {}
grade: 100.0
input:
  '@lang': en
  '@random': []
  '@username': anonymous
  insert: "struct node *cur=*head;\nwhile(cur!=NULL){\n    if((*cmp)(val,cur->val)==0)\n\
    \        return 0;\n    cur=cur->next;\n}\nstruct node *new;\nnew=malloc(sizeof(struct\
    \ node));\nif(new==NULL)\n    return -1;\nnew->val=val;\nif((*head)==NULL){\n\
    \    *head=new;\n    new->next=NULL;\n    return 0;\n}\nif((*cmp)(val,(*head)->val)<0){\n\
    \    new->next=(*head);\n    (*head)=new;\n    return 0;\n}\nstruct node *current=*head;\n\
    while(current->next!=NULL){\n    if((*cmp)(val,current->next->val)<0){\n     \
    \   new->next=current->next;\n        current->next=new;\n        return 0;\n\
    \    }\n    current=current->next;\n}\nif(current->next==NULL){\n    new->next=NULL;\n\
    \    current->next=new;\n    return 0;\n}\nreturn 0;"
  order_relation: return a-b;
problems:
  insert: [success, "* Insertion in an empty list\n\n  => r\xE9ussi (1/1) pts)\n\n\
      \n* Insertion in an empty list with malloc fail\n\n  => r\xE9ussi (1/1) pts)\n\
      \n\n* Insertion in first place, natural order\n\n  => r\xE9ussi (1/1) pts)\n\
      \n\n* Insertion in first place with malloc failure\n\n  => r\xE9ussi (1/1) pts)\n\
      \n\n* Insertion in middle place, simple case, natural order\n\n  => r\xE9ussi\
      \ (1/1) pts)\n\n\n* Insertion in middle place, complex case, natural order\n\
      \n  => r\xE9ussi (2/2) pts)\n\n\n* Insertion in middle place, with malloc failure\n\
      \n  => r\xE9ussi (1/1) pts)\n\n\n* Insertion in last place, simple case, natural\
      \ order\n\n  => r\xE9ussi (1/1) pts)\n\n\n* Insertion in last place, complex\
      \ case, natural order\n\n  => r\xE9ussi (2/2) pts)\n\n\n* Insertion in last\
      \ place, with malloc failure\n\n  => r\xE9ussi (1/1) pts)\n\n\n* Insertion in\
      \ first place, reverse order\n\n  => r\xE9ussi (1/1) pts)\n\n\n* Insertion in\
      \ middle place, simple case, reverse order\n\n  => r\xE9ussi (1/1) pts)\n\n\n\
      * Insertion in middle place, complex case, reverse order\n\n  => r\xE9ussi (2/2)\
      \ pts)\n\n\n* Insertion in last place, simple case, reverse order\n\n  => r\xE9\
      ussi (1/1) pts)\n\n\n* Insertion in last place, complex case, reverse order\n\
      \n  => r\xE9ussi (2/2) pts)\n\n\n* Reinsertion in first place\n\n  => r\xE9\
      ussi (1/1) pts)\n\n\n* Reinsertion in middle place\n\n  => r\xE9ussi (1/1) pts)\n\
      \n\n* Reinsertion in last place\n\n  => r\xE9ussi (1/1) pts)\n\n\n"]
  order_relation: [success, "* Comparison of equals char\n\n  => r\xE9ussi (1/1) pts)\n\
      \n\n* Comparison with a > b\n\n  => r\xE9ussi (1/1) pts)\n\n\n* Comparison with\
      \ a < b\n\n  => r\xE9ussi (1/1) pts)\n\n\n"]
response_type: rst
result: success
status: done
stderr: ''
stdout: ''
submitted_on: 2018-03-18 21:40:59.176000
taskid: order_relation_linked_list
tests: {}
text: "- Votre code compile.\n\n- Votre code a pass\xE9 tous les tests."
username: anonymous
