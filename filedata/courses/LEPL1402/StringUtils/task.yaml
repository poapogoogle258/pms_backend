accessible: true
author: Yakoub J, Rucquoy A
categories:
- module1
context: |-
    In this task, we ask you to implement several common methods inspired from java's String_ API. The objective of this task is to get you used
    to String manipulation in java. In order to succeed this task, you will have to implement four different methods from a class we called ``StringUtils`` :

    - ``split(String str, char marker)`` : separate a String into fragments each time a specific character ``marker`` is encountered. Note that, for simplicity, marker is a ``char`` whereas in java's String_ it is a ``String``. For example, calling your method with "Here.I.Go" with marker '.' should return an array of size three with "Here", "I" and "Go" in its cells.
    - ``indexOf(String str, String sub)`` : returns the index of the first occurrence of the ``String`` sub in the ``String`` str. For example ``indexOf("Hello", "ell")`` should return 1, ``indexOf("Hello", "o")`` should return 4. If there is no occurrence of sub in str, return -1.
    - ``toLowerCase(String str)`` : returns a String with the same characters as 'str' except that all upper case characters have been replaced by their lower case equivalent.
    - ``palindrome(String str)`` : Returns true if the string 'str' is a palindrome : a string that reads the same from left to right AND from right to left (for example, "kayak"). Note that this method does not exist in java's String_ API because it's not very useful. But it is still a good exercise to train yourself to manipulate String objects in java.


    .. _String: https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#subSequence-int-int-



    Here is the skeleton of the ``StringUtils`` (downloadable here_):

    You can download the `IntelliJ Project`_ that contains few tests to help you.


    .. _`IntelliJ Project`: /course/LEPL1402/StringUtils/LEPL1402_StringUtils.zip
    .. _here: /course/LEPL1402/StringUtils/StringUtils.java

    .. code-block:: java

        public class StringUtils {


            /**
             * Split a string according to a delimiter
             *
             * @param str The string to split
             * @param delimiter The delimiter
             * @return An array containing the substring which fall
             *          between two consecutive occurence of the delimiter.
             *          If there is no occurence of the delimiter, it should
             *          return an array of size 1 with the string at element 0
             */
            public static String [] split(String str, char delimiter){

            }


            /**
             * Find the first occurence of a substring in a string
             *
             * @param str The string to look in
             * @param sub The string to look for
             * @return The index of the start of the first appearance of
             *          the substring in str or -1 if sub does not appear
             *          in str
             */
            public static int indexOf(String str, String sub){

            }


            /**
             * Convert a string to lowercase
             *
             * @param str The string to convert
             * @return A new string, same as str but with every
             *          character put to lower case.
             */
            public static String toLowerCase(String str){

            }


            /**
             * Check if a string is a palyndrome
             *
             * A palyndrome is a sequence of character that is the
             * same when read from left to right and from right to
             * left.
             *
             * @param str The string to check
             * @return true if str is a palyndrome, false otherwise
             */
            public static boolean palindrome(String str){
            
            }


        }

environment: java8scala
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    memory: '100'
    time: '30'
    output: '2'
name: '[Module 1] Strings'
network_grading: false
order: 9
problems:
    student_split:
        language: java
        default: ''
        header: 'Paste here the **body** of your ``split`` method. Note that you can''t
            use ``split`` from ``String`` API :'
        type: code
        name: ''
    student_indexof:
        type: code
        header: 'Paste here the **body** of your ``indexOf`` method. Note that you
            can''t use ``indexOf`` from ``String`` API :'
        name: ''
        default: ''
        language: java
    student_tolowercase:
        name: ''
        language: java
        type: code
        header: 'Paste here the **body** of your ``toLowerCase`` method. Note that
            you can''t use ``toLowerCase`` from ``String`` API :'
        default: ''
    student_palindrome:
        header: 'Paste here the **body** of your ``palindrome`` method :'
        default: ''
        type: code
        language: java
        name: ''
run_cmd: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
