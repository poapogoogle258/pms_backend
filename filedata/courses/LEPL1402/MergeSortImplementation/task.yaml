accessible: true
author: ''
categories:
- module2
context: |
    In this exercise we ask you to implement the top-down_ merge sort  algorithm on an array of integer. You have to use **2 methods**:

        - Sort, this method has to divide the array and apply merge.
        - Merge, this method has to merge the array given the 2 index, it receives from sort 3 index, lower bound, middle and high. It also receives a copy of the first array.

    The tests are build to make you able to test the two methods separly but we **recommand** you to test them by yourself.

    You can download the `IntelliJ Project`_ that contains few tests to help you.

    .. _`IntelliJ Project`: /course/LEPL1402/MergeSortImplementation/LEPL1402_MergeSortImplementation.zip

    Here is the class MergeSort_:

    .. code-block:: java

        public class MergeSort {

            /**
             * Pre-conditions: a[lo..mid] and a[mid+1..hi] are sorted
             * Post-conditions: a[lo..hi] is sorted
             */
            private static void merge(int[] a, int[] aux, int lo, int mid, int hi) {
                // TODO By Student
            }
            /**
             * Rearranges the array in ascending order, using the natural order
             */
            public static void sort(int[] a) {
                // TODO By Student
            }

            //TODO Optionnal additionnal method
        }

    .. _MergeSort: /course/LEPL1402/MergeSortImplementation/MergeSort.java

    .. _top-down: /course/LEPL1402/MergeSortImplementation/topdown.png
environment: pyjavacpp
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    memory: '100'
    time: '30'
    output: '2'
name: '[Module 2] Merge Sort Implementation'
network_grading: false
order: 19
problems:
    student_sort:
        language: java
        type: code
        header: Paste here the **body** of your method sort
        default: //
        name: Sort
    student_merge:
        type: code
        name: Merge
        language: java
        header: 'Paste here the **body** of your method merge:'
        default: //
    student_additionnal:
        optional: 'on'
        language: java
        default: ''
        type: code
        header: 'Paste here your additionnal method, **including their signature**:'
        name: Additionnal method
run_cmd: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
